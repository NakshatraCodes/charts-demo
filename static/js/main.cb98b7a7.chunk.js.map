{"version":3,"sources":["components/Button.js","components/Wrapper.js","components/BodyContainer.js","components/ToggleButton.js","components/Chart2.js","components/Bar.js","components/BarWithNegativeValues.js","App.js","index.js"],"names":["styled","button","props","primary","div","dark","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","input","ToggleButton","changeTheme","id","type","onClick","e","htmlFor","Chart2","theme","option","tooltip","trigger","axisPointer","formatter","params","tar","i","value","name","seriesName","legend","data","grid","left","right","bottom","containLabel","xAxis","splitLine","show","yAxis","series","stack","itemStyle","barBorderColor","color","emphasis","barWidth","position","style","height","width","Bar","boundaryGap","App","useState","active","setActive","setTheme","BodyContainer","Wrapper","Button","document","body","backgroundColor","display","flexDirection","BarWithNegativeValues","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb98b7a7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background-color: ${(props) => (props.primary ? \"#275efe\" : \"#bebebe\")};\r\n  border: none;\r\n  color: white;\r\n  margin: 0px 10px;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin-top: 4em;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  max-width: 80vw;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n  min-height: 80vh;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: ${(props) => (props.dark == \"dark\" ? \"#100c2a\" : \"white\")};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ToggleButton = ({ changeTheme }) => {\r\n  return (\r\n    <div>\r\n      <CheckBoxWrapper>\r\n        <CheckBox\r\n          id=\"checkbox\"\r\n          type=\"checkbox\"\r\n          onClick={(e) => changeTheme()}\r\n        />\r\n        <CheckBoxLabel htmlFor=\"checkbox\" />\r\n      </CheckBoxWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckBoxWrapper = styled.div`\r\n  margin-top: 2em;\r\n  position: relative;\r\n`;\r\nconst CheckBoxLabel = styled.label`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 10px;\r\n  width: 42px;\r\n  height: 26px;\r\n  border-radius: 15px;\r\n  background: #bebebe;\r\n  cursor: pointer;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    border-radius: 50%;\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 3px;\r\n    background: #ffffff;\r\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\nconst CheckBox = styled.input`\r\n  opacity: 0;\r\n  z-index: 1;\r\n  border-radius: 15px;\r\n  width: 42px;\r\n  height: 26px;\r\n  &:checked + ${CheckBoxLabel} {\r\n    background: #03dac5;\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      border-radius: 50%;\r\n      width: 18px;\r\n      height: 18px;\r\n      margin-left: 21px;\r\n      transition: 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Chart2 = ({ theme }) => {\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n          formatter: function (params) {\r\n            var tar;\r\n            for (let i = 1; i <= 4; i++) {\r\n              if (params[i].value !== \"-\") {\r\n                tar = params[i];\r\n              }\r\n            }\r\n            return tar.name + \"<br/>\" + tar.seriesName + \" : \" + tar.value;\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"Starts\", \"Exits\", \"Discrepencies\", \"Net Change\"],\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          splitLine: { show: false },\r\n          data: [\r\n            \"Expansion\",\r\n            \"Replacement\",\r\n            \"Involuntary Turnover\",\r\n            \"Voluntary Turnover\",\r\n            \"Discrepencies\",\r\n            \"Net Change\",\r\n          ],\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Empty\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              barBorderColor: \"rgba(0,0,0,0)\",\r\n              color: \"rgba(0,0,0,0)\",\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                barBorderColor: \"rgba(0,0,0,0)\",\r\n                color: \"rgba(0,0,0,0)\",\r\n              },\r\n            },\r\n            barWidth: \"90%\",\r\n            data: [0, 394, 604, 372, 372, \"-\"],\r\n          },\r\n          {\r\n            name: \"Starts\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              barBorderColor: \"rgb(145,204,117)\",\r\n              color: \"rgb(145,204,117)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n            data: [394, 326, \"-\", \"-\", \"-\", \"-\"],\r\n          },\r\n          {\r\n            name: \"Exits\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              barBorderColor: \"rgb(238,102,102)\",\r\n              color: \"rgb(238,102,102)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"bottom\",\r\n            },\r\n            data: [\"-\", \"-\", 116, 232, \"-\", \"-\"],\r\n          },\r\n          {\r\n            name: \"Discrepencies\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              barBorderColor: \"rgb(125,131,145)\",\r\n              color: \"rgb(125,131,145)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"bottom\",\r\n            },\r\n            data: [\"-\", \"-\", \"-\", \"-\", 7, \"-\"],\r\n          },\r\n          {\r\n            name: \"Net Change\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n            data: [\"-\", \"-\", \"-\", \"-\", \"-\", 393],\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Chart2;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Bar = ({ theme }) => {\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"Case Days to Close\", \"Open Cases Age\"],\r\n        },\r\n        grid: {\r\n          left: \"1%\",\r\n          right: \"1%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.01],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: [\r\n            \"Level of Absence\",\r\n            \"HR Policies Inquiry\",\r\n            \"Employee Relations\",\r\n            \"Data Change\",\r\n            \"Benefits\",\r\n            \"Compensation\",\r\n            \"Employee Grievance\",\r\n          ],\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Case Days to Close\",\r\n            type: \"bar\",\r\n            data: [23.2, 23.9, 38.6, 41.7, 48.7, 60.6, 83.9],\r\n          },\r\n          {\r\n            name: \"Open Cases Age\",\r\n            type: \"bar\",\r\n            data: [15.9, 15.5, 28.7, 54.5, 53.6, 68.3, 64],\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Bar;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nlet labelRight = {\r\n  position: \"right\",\r\n};\r\n\r\nconst Bar = ({ theme }) => {\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          position: \"top\",\r\n          boundaryGap: [0.05, 0.05],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: [\r\n            \"Level of Absence\",\r\n            \"HR Policies Inquiry\",\r\n            \"Employee Relations\",\r\n            \"Data Change\",\r\n            \"Benefits\",\r\n            \"Compensation\",\r\n            \"Employee Grievance\",\r\n          ],\r\n        },\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            label: {\r\n              show: false,\r\n              formatter: \"{b}\",\r\n            },\r\n            data: [+7.3, +8.4, +9.96, -12.8, -4.9, -7.7, +19.9],\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Bar;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport BodyContainer from \"./components/BodyContainer\";\r\nimport ToggleButton from \"./components/ToggleButton\";\r\n\r\nimport Chart2 from \"./components/Chart2\";\r\nimport Bar from \"./components/Bar\";\r\nimport BarWithNegativeValues from \"./components/BarWithNegativeValues\";\r\n\r\nconst App = () => {\r\n  const [active, setActive] = useState(\"chart1\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const renderChart = () => {\r\n    if (active === \"chart2\") {\r\n      return <Chart2 theme={theme} />;\r\n    } else {\r\n      return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <Bar theme={theme} />\r\n          <BarWithNegativeValues theme={theme} />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    if (theme === \"light\") {\r\n      document.body.style.backgroundColor = \"#100c2a\";\r\n      setTheme(\"dark\");\r\n    } else {\r\n      document.body.style.backgroundColor = \"white\";\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BodyContainer dark={theme}>\r\n      <Wrapper>\r\n        <Button\r\n          primary={active === \"chart1\"}\r\n          onClick={() => setActive(\"chart1\")}\r\n        >\r\n          Chart 1\r\n        </Button>\r\n        <Button\r\n          primary={active === \"chart2\"}\r\n          onClick={() => setActive(\"chart2\")}\r\n        >\r\n          Chart 2\r\n        </Button>\r\n        <ToggleButton changeTheme={changeTheme} />\r\n        {renderChart()}\r\n      </Wrapper>\r\n    </BodyContainer>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"main\"));\r\n"],"sourceRoot":""}