{"version":3,"sources":["components/Button.js","components/Wrapper.js","components/BodyContainer.js","components/ToggleButton.js","components/ChartContainer.js","components/ConfigInput.js","components/Chart2.js","components/Bar.js","components/BarWithNegativeValues.js","data/config.js","App.js","index.js"],"names":["styled","button","props","primary","div","dark","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","input","ToggleButton","changeTheme","id","type","onClick","e","htmlFor","textarea","Chart2","theme","option","tooltip","trigger","axisPointer","formatter","params","tar","i","value","name","seriesName","legend","data","grid","left","right","bottom","containLabel","xAxis","splitLine","show","yAxis","series","stack","itemStyle","barBorderColor","color","emphasis","borderColor","barWidth","position","style","height","width","Bar","boundaryGap","yAxisData","forEach","element","push","getYAxis","barGap","barCategoryGap","series1","caseDaysToClose","getSeries1","series2","openCasesAge","getSeries2","obj","toFixed","getSeries","App","initialData","config","reverse","useState","active","setActive","setTheme","setData","JSON","stringify","inputValue","setInputValue","console","log","BodyContainer","Wrapper","Button","document","body","backgroundColor","ChartContainer","BarWithNegativeValues","ConfigInput","onChange","target","spellCheck","parse","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8fbfe7ae.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background-color: ${(props) => (props.primary ? \"#275efe\" : \"#bebebe\")};\r\n  border: none;\r\n  color: white;\r\n  margin: 0px 10px;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin-top: 4em;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  max-width: 80vw;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n  min-height: 80vh;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  min-height: 160vh;\r\n  width: 100%;\r\n  background-color: ${(props) => (props.dark === \"dark\" ? \"#100c2a\" : \"white\")};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ToggleButton = ({ changeTheme }) => {\r\n  return (\r\n    <div>\r\n      <CheckBoxWrapper>\r\n        <CheckBox\r\n          id=\"checkbox\"\r\n          type=\"checkbox\"\r\n          onClick={(e) => changeTheme()}\r\n        />\r\n        <CheckBoxLabel htmlFor=\"checkbox\" />\r\n      </CheckBoxWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckBoxWrapper = styled.div`\r\n  margin-top: 2em;\r\n  position: relative;\r\n`;\r\nconst CheckBoxLabel = styled.label`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 10px;\r\n  width: 42px;\r\n  height: 26px;\r\n  border-radius: 15px;\r\n  background: #bebebe;\r\n  cursor: pointer;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    border-radius: 50%;\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 3px;\r\n    background: #ffffff;\r\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\nconst CheckBox = styled.input`\r\n  opacity: 0;\r\n  z-index: 1;\r\n  border-radius: 15px;\r\n  width: 42px;\r\n  height: 26px;\r\n  &:checked + ${CheckBoxLabel} {\r\n    background: #03dac5;\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      border-radius: 50%;\r\n      width: 18px;\r\n      height: 18px;\r\n      margin-left: 21px;\r\n      transition: 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ToggleButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.textarea`\r\n  width: 100%;\r\n  overflow: scroll;\r\n  border-radius: 5px;\r\n  overflow: visible;\r\n  height: 500px;\r\n  margin-top: 4em;\r\n`;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Chart2 = ({ theme }) => {\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n          formatter: function (params) {\r\n            var tar;\r\n            for (let i = 1; i <= 4; i++) {\r\n              if (params[i].value !== \"-\") {\r\n                tar = params[i];\r\n              }\r\n            }\r\n            return tar.name + \"<br/>\" + tar.seriesName + \" : \" + tar.value;\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"Starts\", \"Exits\", \"Discrepencies\", \"Net Change\"],\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          splitLine: { show: false },\r\n          data: [\r\n            \"Expansion\",\r\n            \"Replacement\",\r\n            \"Involuntary Turnover\",\r\n            \"Voluntary Turnover\",\r\n            \"Discrepencies\",\r\n            \"Net Change\",\r\n          ],\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Empty\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              barBorderColor: \"rgba(0,0,0,0)\",\r\n              color: \"rgba(0,0,0,0)\",\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                borderColor: \"rgba(0,0,0,0)\",\r\n                color: \"rgba(0,0,0,0)\",\r\n              },\r\n            },\r\n            barWidth: \"95%\",\r\n            data: [0, 394, 604, 372, 372, \"-\"],\r\n          },\r\n          {\r\n            name: \"Starts\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(190,241,198)\",\r\n              color: \"rgb(190,241,198)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n            data: [394, 326, \"-\", \"-\", \"-\", \"-\"],\r\n          },\r\n          {\r\n            name: \"Exits\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(249,178,194)\",\r\n              color: \"rgb(249,178,194)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"bottom\",\r\n            },\r\n            data: [\"-\", \"-\", 116, 232, \"-\", \"-\"],\r\n          },\r\n          {\r\n            name: \"Discrepencies\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(233,233,235)\",\r\n              color: \"rgb(233,233,235)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"bottom\",\r\n            },\r\n            data: [\"-\", \"-\", \"-\", \"-\", 7, \"-\"],\r\n          },\r\n          {\r\n            name: \"Net Change\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(200,231,249)\",\r\n              color: \"rgb(200,231,249)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n            data: [\"-\", \"-\", \"-\", \"-\", \"-\", 393],\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Chart2;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Bar = ({ theme, data }) => {\r\n  const getYAxis = () => {\r\n    let yAxisData = [];\r\n    data.forEach((element) => {\r\n      yAxisData.push(element.name);\r\n    });\r\n    return yAxisData;\r\n  };\r\n\r\n  const getSeries1 = () => {\r\n    let series1 = [];\r\n    data.forEach((element) => {\r\n      series1.push(element.caseDaysToClose);\r\n    });\r\n    return series1;\r\n  };\r\n\r\n  const getSeries2 = () => {\r\n    let series2 = [];\r\n    data.forEach((element) => {\r\n      series2.push(element.openCasesAge);\r\n    });\r\n    return series2;\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"Case Days to Close\", \"Open Cases Age\"],\r\n        },\r\n        grid: {\r\n          left: \"1%\",\r\n          right: \"1%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.01],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: getYAxis(),\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Case Days to Close\",\r\n            type: \"bar\",\r\n            barGap: \"0%\",\r\n            barCategoryGap: \"25%\",\r\n            barWidth: \"30%\",\r\n            data: getSeries1(),\r\n            itemStyle: {\r\n              borderColor: \"rgb(97,180,230)\",\r\n              color: \"rgb(97,180,230)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"right\",\r\n              color: \"rgb(97,180,230)\",\r\n            },\r\n          },\r\n          {\r\n            name: \"Open Cases Age\",\r\n            type: \"bar\",\r\n            barGap: \"0%\",\r\n            barCategoryGap: \"25%\",\r\n            barWidth: \"30%\",\r\n            data: getSeries2(),\r\n            itemStyle: {\r\n              borderColor: \"rgb(253,143,126)\",\r\n              color: \"rgb(253,143,126)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"right\",\r\n              color: \"rgb(253,143,126)\",\r\n            },\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Bar;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Bar = ({ theme, data }) => {\r\n  const getYAxis = () => {\r\n    let yAxisData = [];\r\n    data.forEach((element) => {\r\n      yAxisData.push(element.name);\r\n    });\r\n    return yAxisData;\r\n  };\r\n\r\n  const getSeries = () => {\r\n    let series = [];\r\n    data.forEach((element) => {\r\n      let value = element.caseDaysToClose - element.openCasesAge;\r\n      let obj = {\r\n        value: value.toFixed(2),\r\n        label: {\r\n          show: true,\r\n          position: value > 1 ? \"right\" : \"left\",\r\n          color: \"rgb(91,207,198)\",\r\n        },\r\n      };\r\n      series.push(obj);\r\n    });\r\n    return series;\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          position: \"top\",\r\n          boundaryGap: [0.1, 0.05],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: getYAxis(),\r\n        },\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            label: {\r\n              show: true,\r\n              position: \"left\",\r\n            },\r\n            itemStyle: {\r\n              borderColor: \"rgb(91,207,198)\",\r\n              color: \"rgb(91,207,198)\",\r\n            },\r\n            data: getSeries(),\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Bar;\r\n","export default [\r\n  {\r\n    name: \"Employee Grievance\",\r\n    caseDaysToClose: 83.9,\r\n    openCasesAge: 69,\r\n  },\r\n  {\r\n    name: \"Compensation\",\r\n    caseDaysToClose: 60.6,\r\n    openCasesAge: 68.3,\r\n  },\r\n  {\r\n    name: \"Benefits\",\r\n    caseDaysToClose: 48.7,\r\n    openCasesAge: 53.6,\r\n  },\r\n  {\r\n    name: \"Data Change\",\r\n    caseDaysToClose: 41.7,\r\n    openCasesAge: 54.5,\r\n  },\r\n  {\r\n    name: \"Employee Relations\",\r\n    caseDaysToClose: 38.6,\r\n    openCasesAge: 28.7,\r\n  },\r\n  {\r\n    name: \"HR Policies Inquiry\",\r\n    caseDaysToClose: 23.9,\r\n    openCasesAge: 15.5,\r\n  },\r\n  {\r\n    name: \"Level of Absence\",\r\n    caseDaysToClose: 23.2,\r\n    openCasesAge: 15.9,\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport BodyContainer from \"./components/BodyContainer\";\r\nimport ToggleButton from \"./components/ToggleButton\";\r\nimport ChartContainer from \"./components/ChartContainer\";\r\nimport ConfigInput from \"./components/ConfigInput\";\r\n\r\nimport Chart2 from \"./components/Chart2\";\r\nimport Bar from \"./components/Bar\";\r\nimport BarWithNegativeValues from \"./components/BarWithNegativeValues\";\r\n\r\nimport config from \"./data/config\";\r\n\r\nconst App = () => {\r\n  const initialData = config.reverse();\r\n  const [active, setActive] = useState(\"chart1\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [data, setData] = useState(initialData);\r\n  const [inputValue, setInputValue] = useState(\r\n    JSON.stringify(initialData, null, 4)\r\n  );\r\n\r\n  console.log(initialData);\r\n\r\n  const saveData = () => {\r\n    setData(JSON.parse(inputValue));\r\n  };\r\n\r\n  const renderChart = () => {\r\n    if (active === \"chart2\") {\r\n      return <Chart2 theme={theme} />;\r\n    } else {\r\n      return (\r\n        <ChartContainer>\r\n          <Bar theme={theme} data={data} />\r\n          <BarWithNegativeValues theme={theme} data={data} />\r\n        </ChartContainer>\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    if (theme === \"light\") {\r\n      document.body.style.backgroundColor = \"#100c2a\";\r\n      setTheme(\"dark\");\r\n    } else {\r\n      document.body.style.backgroundColor = \"white\";\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BodyContainer dark={theme}>\r\n      <Wrapper>\r\n        <Button\r\n          primary={active === \"chart1\"}\r\n          onClick={() => setActive(\"chart1\")}\r\n        >\r\n          Chart 1\r\n        </Button>\r\n        <Button\r\n          primary={active === \"chart2\"}\r\n          onClick={() => setActive(\"chart2\")}\r\n        >\r\n          Chart 2\r\n        </Button>\r\n        <ToggleButton changeTheme={changeTheme} />\r\n        {renderChart()}\r\n        <ConfigInput\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          spellCheck=\"false\"\r\n        />\r\n        <Button primary onClick={() => saveData()}>\r\n          Save\r\n        </Button>\r\n      </Wrapper>\r\n    </BodyContainer>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"main\"));\r\n"],"sourceRoot":""}