{"version":3,"sources":["components/Button.js","components/Wrapper.js","components/BodyContainer.js","components/ToggleButton.js","components/CandleStick.js","components/Bar.js","App.js","index.js"],"names":["styled","button","props","primary","div","dark","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","input","ToggleButton","changeTheme","id","type","onClick","e","htmlFor","CandleStick","theme","option","tooltip","trigger","axisPointer","xAxis","data","yAxis","series","style","height","width","margin","Bar","legend","grid","left","right","bottom","containLabel","boundaryGap","name","App","useState","active","setActive","setTheme","BodyContainer","Wrapper","Button","document","body","backgroundColor","ReactDOM","render","getElementById"],"mappings":"kNAEeA,MAAOC,OAAtB,qSACsB,SAACC,GAAD,OAAYA,EAAMC,QAAU,UAAY,aCD/CH,MAAOI,IAAtB,qLCAeJ,MAAOI,IAAtB,oHAKsB,SAACF,GAAD,MAA0B,QAAdA,EAAMG,KAAiB,UAAY,W,OCW/DC,EAAkBN,IAAOI,IAAV,uEAIfG,EAAgBP,IAAOQ,MAAV,oaAqBbC,EAAWT,IAAOU,MAAV,+VAMEH,GAcDI,EA5DM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,OACE,8BACE,eAACN,EAAD,WACE,cAACG,EAAD,CACEI,GAAG,WACHC,KAAK,WACLC,QAAS,SAACC,GAAD,OAAOJ,OAElB,cAACL,EAAD,CAAeU,QAAQ,mB,OC+BhBC,EAxCK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACE,cAAC,IAAD,CACEC,OAAQ,CACNC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXT,KAAM,WAGVU,MAAO,CACLC,KAAM,CACJ,YACA,cACA,uBACA,kBAGJC,MAAO,GACPC,OAAQ,CACN,CACEb,KAAM,IACNW,KAAM,CACJ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,EAAG,QAKpBN,MAAOA,EACPS,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,OAAQ,WCiBDC,EApDH,SAAC,GAAe,IAAbb,EAAY,EAAZA,MACb,OACE,cAAC,IAAD,CACEC,OAAQ,CACNC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXT,KAAM,WAGVmB,OAAQ,CACNR,KAAM,CAAC,qBAAsB,mBAE/BS,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBd,MAAO,CACLV,KAAM,QACNyB,YAAa,CAAC,EAAG,MAEnBb,MAAO,CACLZ,KAAM,WACNW,KAAM,CACJ,qBACA,eACA,WACA,cACA,qBACA,cAGJE,OAAQ,CACN,CACEa,KAAM,qBACN1B,KAAM,MACNW,KAAM,CAAC,MAAO,MAAO,MAAO,OAAQ,OAAQ,QAE9C,CACEe,KAAM,iBACN1B,KAAM,MACNW,KAAM,CAAC,MAAO,MAAO,KAAO,OAAQ,OAAQ,UAIlDN,MAAOA,EACPS,MAAO,CAAEC,OAAQ,OAAQC,MAAO,WCFvBW,EAxCH,WACV,MAA4BC,mBAAS,OAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,SAAnC,mBAAOvB,EAAP,KAAc0B,EAAd,KAoBA,OACE,cAACC,EAAD,CAAezC,KAAMc,EAArB,SACE,eAAC4B,EAAD,WACE,cAACC,EAAD,CAAQ7C,QAAoB,QAAXwC,EAAkB5B,QAAS,kBAAM6B,EAAU,QAA5D,iBAGA,cAACI,EAAD,CACE7C,QAAoB,WAAXwC,EACT5B,QAAS,kBAAM6B,EAAU,WAF3B,yBAMA,cAAC,EAAD,CAAchC,YAtBA,WACJ,UAAVO,GACF8B,SAASC,KAAKtB,MAAMuB,gBAAkB,UACtCN,EAAS,UAETI,SAASC,KAAKtB,MAAMuB,gBAAkB,QACtCN,EAAS,aAbI,WAAXF,EACK,cAAC,EAAD,CAAaxB,MAAOA,IAEpB,cAAC,EAAD,CAAKA,MAAOA,UCZzBiC,IAASC,OAAO,cAAC,EAAD,IAASJ,SAASK,eAAe,W","file":"static/js/main.a844eb65.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background-color: ${(props) => (props.primary ? \"#275efe\" : \"#bebebe\")};\r\n  border: none;\r\n  color: white;\r\n  margin: 0px 10px;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin-top: 4em;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  max-width: 80vw;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n  min-height: 80vh;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: ${(props) => (props.dark == \"dark\" ? \"#100c2a\" : \"white\")};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ToggleButton = ({ changeTheme }) => {\r\n  return (\r\n    <div>\r\n      <CheckBoxWrapper>\r\n        <CheckBox\r\n          id=\"checkbox\"\r\n          type=\"checkbox\"\r\n          onClick={(e) => changeTheme()}\r\n        />\r\n        <CheckBoxLabel htmlFor=\"checkbox\" />\r\n      </CheckBoxWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckBoxWrapper = styled.div`\r\n  margin-top: 2em;\r\n  position: relative;\r\n`;\r\nconst CheckBoxLabel = styled.label`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 10px;\r\n  width: 42px;\r\n  height: 26px;\r\n  border-radius: 15px;\r\n  background: #bebebe;\r\n  cursor: pointer;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    border-radius: 50%;\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 3px;\r\n    background: #ffffff;\r\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\nconst CheckBox = styled.input`\r\n  opacity: 0;\r\n  z-index: 1;\r\n  border-radius: 15px;\r\n  width: 42px;\r\n  height: 26px;\r\n  &:checked + ${CheckBoxLabel} {\r\n    background: #03dac5;\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      border-radius: 50%;\r\n      width: 18px;\r\n      height: 18px;\r\n      margin-left: 21px;\r\n      transition: 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst CandleStick = ({ theme }) => {\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        xAxis: {\r\n          data: [\r\n            \"Expansion\",\r\n            \"Replacement\",\r\n            \"Involuntary Turnover\",\r\n            \"Discrepencies\",\r\n          ],\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            type: \"k\",\r\n            data: [\r\n              [20, 34, 10, 38],\r\n              [40, 35, 30, 50],\r\n              [31, 38, 33, 44],\r\n              [38, 15, 5, 42],\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{\r\n        height: \"80vh\",\r\n        width: \"50vw\",\r\n        margin: \"auto\",\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default CandleStick;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Bar = ({ theme }) => {\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"Case Days to Close\", \"Open Cases Age\"],\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.01],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: [\r\n            \"Employee Grievance\",\r\n            \"Compensation\",\r\n            \"Benefits\",\r\n            \"Data Change\",\r\n            \"Employee Relations\",\r\n            \"HR Policy\",\r\n          ],\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Case Days to Close\",\r\n            type: \"bar\",\r\n            data: [18203, 23489, 29034, 104970, 131744, 63230],\r\n          },\r\n          {\r\n            name: \"Open Cases Age\",\r\n            type: \"bar\",\r\n            data: [19325, 23438, 31000, 121594, 134141, 68807],\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Bar;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport BodyContainer from \"./components/BodyContainer\";\r\nimport ToggleButton from \"./components/ToggleButton\";\r\n\r\nimport CandleStick from \"./components/CandleStick\";\r\nimport Bar from \"./components/Bar\";\r\n\r\nconst App = () => {\r\n  const [active, setActive] = useState(\"bar\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const renderChart = () => {\r\n    if (active === \"candle\") {\r\n      return <CandleStick theme={theme} />;\r\n    } else {\r\n      return <Bar theme={theme} />;\r\n    }\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    if (theme === \"light\") {\r\n      document.body.style.backgroundColor = \"#100c2a\";\r\n      setTheme(\"dark\");\r\n    } else {\r\n      document.body.style.backgroundColor = \"white\";\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BodyContainer dark={theme}>\r\n      <Wrapper>\r\n        <Button primary={active === \"bar\"} onClick={() => setActive(\"bar\")}>\r\n          Bar\r\n        </Button>\r\n        <Button\r\n          primary={active === \"candle\"}\r\n          onClick={() => setActive(\"candle\")}\r\n        >\r\n          CandleStick\r\n        </Button>\r\n        <ToggleButton changeTheme={changeTheme} />\r\n        {renderChart()}\r\n      </Wrapper>\r\n    </BodyContainer>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"main\"));\r\n"],"sourceRoot":""}