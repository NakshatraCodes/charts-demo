{"version":3,"sources":["components/Button.js","components/Wrapper.js","components/BodyContainer.js","components/ToggleButton.js","components/ChartContainer.js","components/ConfigInput.js","components/Chart2.js","components/Bar.js","components/BarWithNegativeValues.js","data/config.js","data/config2.js","components/Container.js","App.js","index.js"],"names":["styled","button","props","primary","div","dark","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","input","ToggleButton","changeTheme","id","type","onClick","e","htmlFor","textarea","Chart2","theme","data","computeType","arr","forEach","element","metadata","node","push","Math","abs","value","option","tooltip","trigger","axisPointer","formatter","params","tar","i","name","seriesName","legend","computeLegend","grid","left","right","bottom","containLabel","xAxis","splitLine","show","computeXAxis","yAxis","series","stack","itemStyle","barBorderColor","color","emphasis","borderColor","barWidth","sum","flag","console","log","computeEmpty","position","computeNetChange","style","height","width","Bar","boundaryGap","yAxisData","getYAxis","barGap","barCategoryGap","series1","caseDaysToClose","getSeries1","series2","openCasesAge","getSeries2","obj","toFixed","getSeries","App","initialData","config","reverse","useState","active","setActive","setTheme","setData","config2","data2","setData2","JSON","stringify","inputValue","setInputValue","inputValue2","setInputValue2","BodyContainer","Wrapper","Button","document","body","backgroundColor","Container","ConfigInput","onChange","target","spellCheck","parse","ChartContainer","BarWithNegativeValues","ReactDOM","render","getElementById"],"mappings":"wNAEeA,MAAOC,OAAtB,qSACsB,SAACC,GAAD,OAAYA,EAAMC,QAAU,UAAY,aCD/CH,MAAOI,IAAtB,qLCAeJ,MAAOI,IAAtB,0IAMsB,SAACF,GAAD,MAA2B,SAAfA,EAAMG,KAAkB,UAAY,W,OCUhEC,EAAkBN,IAAOI,IAAV,uEAIfG,EAAgBP,IAAOQ,MAAV,oaAqBbC,EAAWT,IAAOU,MAAV,+VAMEH,GAcDI,EA5DM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,OACE,8BACE,eAACN,EAAD,WACE,cAACG,EAAD,CACEI,GAAG,WACHC,KAAK,WACLC,QAAS,SAACC,GAAD,OAAOJ,OAElB,cAACL,EAAD,CAAeU,QAAQ,mBCVhBjB,MAAOI,IAAtB,uICAeJ,MAAOkB,SAAtB,oJ,OCmMeC,EAlMA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjBC,EAAc,SAACR,GACnB,IAAIS,EAAM,GAUV,OATAF,EAAKG,SAAQ,SAACC,GACZA,EAAQC,SAASF,SAAQ,SAACG,GACpBF,EAAQX,OAASA,EACnBS,EAAIK,KAAKC,KAAKC,IAAIH,EAAKI,QAEvBR,EAAIK,KAAK,WAIRL,GAiET,OACE,cAAC,IAAD,CACES,OAAQ,CACNC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXrB,KAAM,UAERsB,UAAW,SAAUC,GAEnB,IADA,IAAIC,EACKC,EAAI,EAAGA,GAAK,EAAGA,IACE,MAApBF,EAAOE,GAAGR,QACZO,EAAMD,EAAOE,IAGjB,OAAOD,EAAIE,KAAO,QAAUF,EAAIG,WAAa,MAAQH,EAAIP,QAG7DW,OAAQ,CACNrB,KAvDc,WACpB,IAAIqB,EAAS,GAIb,OAHArB,EAAKG,SAAQ,SAACC,GACZiB,EAAOd,KAAKH,EAAQX,SAEf4B,EAkDKC,IAERC,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBC,MAAO,CACLnC,KAAM,WACNoC,UAAW,CAAEC,MAAM,GACnB9B,KA5Fa,SAACP,GACpB,IAAIS,EAAM,GAMV,OALAF,EAAKG,SAAQ,SAACC,GACZA,EAAQC,SAASF,SAAQ,SAACG,GACxBJ,EAAIK,KAAKD,EAAKa,YAGXjB,EAqFK6B,IAERC,MAAO,CACLvC,KAAM,SAERwC,OAAQ,CACN,CACEd,KAAM,QACN1B,KAAM,MACNyC,MAAO,QACPC,UAAW,CACTC,eAAgB,gBAChBC,MAAO,iBAETC,SAAU,CACRH,UAAW,CACTI,YAAa,gBACbF,MAAO,kBAGXG,SAAU,MACVxC,KA/EW,WACnB,IAAIE,EAAM,GACNuC,EAAM,EACNC,EAAO,EAsBX,OArBA1C,EAAKG,SAAQ,SAACC,EAASc,GACrBd,EAAQC,SAASF,SAAQ,SAACG,GACX,IAAToC,GACFxC,EAAIK,KAAK,GACTkC,GAAOnC,EAAKI,OAEK,WAAjBN,EAAQX,MACS,kBAAjBW,EAAQX,MAERS,EAAIK,KAAKkC,GACTA,GAAOnC,EAAKI,OACc,UAAjBN,EAAQX,MACjBS,EAAIK,KAAKkC,EAAMjC,KAAKC,IAAIH,EAAKI,QAC7B+B,GAAOjC,KAAKC,IAAIH,EAAKI,QAErBR,EAAIK,KAAK,KAEXmC,EAAO,QAGXC,QAAQC,IAAI1C,GACLA,EAsDO2C,IAGR,CACE1B,KAAM,SACN1B,KAAM,MACNyC,MAAO,QACPC,UAAW,CACTI,YAAa,mBACbF,MAAO,oBAETlD,MAAO,CACL2C,MAAM,EACNgB,SAAU,OAEZ9C,KAAMC,EAAY,WAEpB,CACEkB,KAAM,QACN1B,KAAM,MACNyC,MAAO,QACPC,UAAW,CACTI,YAAa,mBACbF,MAAO,oBAETlD,MAAO,CACL2C,MAAM,EACNgB,SAAU,UAEZ9C,KAAMC,EAAY,UAEpB,CACEkB,KAAM,gBACN1B,KAAM,MACNyC,MAAO,QACPC,UAAW,CACTI,YAAa,mBACbF,MAAO,oBAETlD,MAAO,CACL2C,MAAM,EACNgB,SAAU,UAEZ9C,KAAMC,EAAY,kBAEpB,CACEkB,KAAM,aACN1B,KAAM,MACNyC,MAAO,QACPC,UAAW,CACTI,YAAa,mBACbF,MAAO,oBAETlD,MAAO,CACL2C,MAAM,EACNgB,SAAU,OAEZ9C,KAhKe,SAACP,GACxB,IAAIS,EAAM,GACNuC,EAAM,EAWV,OAVAzC,EAAKG,SAAQ,SAACC,GACZA,EAAQC,SAASF,SAAQ,SAACG,GACH,eAAjBF,EAAQX,KACVS,EAAIK,KAAKkC,IAETvC,EAAIK,KAAK,KACTkC,GAAOnC,EAAKI,aAIXR,EAmJO6C,MAIZhD,MAAOA,EACPiD,MAAO,CAAEC,OAAQ,OAAQC,MAAO,WCjGvBC,EA7FH,SAAC,GAAqB,IAAnBpD,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAyBpB,OACE,cAAC,IAAD,CACEW,OAAQ,CACNC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXrB,KAAM,WAGV4B,OAAQ,CACNrB,KAAM,CAAC,qBAAsB,mBAE/BuB,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBC,MAAO,CACLnC,KAAM,QACN2D,YAAa,CAAC,EAAG,MAEnBpB,MAAO,CACLvC,KAAM,WACNO,KAhDS,WACf,IAAIqD,EAAY,GAIhB,OAHArD,EAAKG,SAAQ,SAACC,GACZiD,EAAU9C,KAAKH,EAAQe,SAElBkC,EA2CKC,IAERrB,OAAQ,CACN,CACEd,KAAM,qBACN1B,KAAM,MACN8D,OAAQ,KACRC,eAAgB,MAChBhB,SAAU,MACVxC,KAjDS,WACjB,IAAIyD,EAAU,GAId,OAHAzD,EAAKG,SAAQ,SAACC,GACZqD,EAAQlD,KAAKH,EAAQsD,oBAEhBD,EA4COE,GACNxB,UAAW,CACTI,YAAa,kBACbF,MAAO,mBAETlD,MAAO,CACL2C,MAAM,EACNgB,SAAU,QACVT,MAAO,oBAGX,CACElB,KAAM,iBACN1B,KAAM,MACN8D,OAAQ,KACRC,eAAgB,MAChBhB,SAAU,MACVxC,KA1DS,WACjB,IAAI4D,EAAU,GAId,OAHA5D,EAAKG,SAAQ,SAACC,GACZwD,EAAQrD,KAAKH,EAAQyD,iBAEhBD,EAqDOE,GACN3B,UAAW,CACTI,YAAa,mBACbF,MAAO,oBAETlD,MAAO,CACL2C,MAAM,EACNgB,SAAU,QACVT,MAAO,uBAKftC,MAAOA,EACPiD,MAAO,CAAEC,OAAQ,OAAQC,MAAO,WCpBvBC,EArEH,SAAC,GAAqB,IAAnBpD,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAyBpB,OACE,cAAC,IAAD,CACEW,OAAQ,CACNC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXrB,KAAM,WAGV8B,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBC,MAAO,CACLnC,KAAM,QACNqD,SAAU,MACVM,YAAa,CAAC,GAAK,MAErBpB,MAAO,CACLvC,KAAM,WACNO,KA9CS,WACf,IAAIqD,EAAY,GAIhB,OAHArD,EAAKG,SAAQ,SAACC,GACZiD,EAAU9C,KAAKH,EAAQe,SAElBkC,EAyCKC,IAERrB,OAAQ,CACN,CACExC,KAAM,MACNN,MAAO,CACL2C,MAAM,EACNgB,SAAU,QAEZX,UAAW,CACTI,YAAa,kBACbF,MAAO,mBAETrC,KAnDQ,WAChB,IAAIiC,EAAS,GAab,OAZAjC,EAAKG,SAAQ,SAACC,GACZ,IAAIM,EAAQN,EAAQsD,gBAAkBtD,EAAQyD,aAC1CE,EAAM,CACRrD,MAAOA,EAAMsD,QAAQ,GACrB7E,MAAO,CACL2C,MAAM,EACNgB,SAAUpC,EAAQ,EAAI,QAAU,OAChC2B,MAAO,oBAGXJ,EAAO1B,KAAKwD,MAEP9B,EAqCOgC,MAIZlE,MAAOA,EACPiD,MAAO,CAAEC,OAAQ,OAAQC,MAAO,WCpEvB,GACb,CACE/B,KAAM,qBACNuC,gBAAiB,KACjBG,aAAc,IAEhB,CACE1C,KAAM,eACNuC,gBAAiB,KACjBG,aAAc,MAEhB,CACE1C,KAAM,WACNuC,gBAAiB,KACjBG,aAAc,MAEhB,CACE1C,KAAM,cACNuC,gBAAiB,KACjBG,aAAc,MAEhB,CACE1C,KAAM,qBACNuC,gBAAiB,KACjBG,aAAc,MAEhB,CACE1C,KAAM,sBACNuC,gBAAiB,KACjBG,aAAc,MAEhB,CACE1C,KAAM,mBACNuC,gBAAiB,KACjBG,aAAc,OClCH,GACb,CACEpE,KAAM,SACNY,SAAU,CACR,CAAEc,KAAM,YAAaT,MAAO,KAC5B,CAAES,KAAM,cAAeT,MAAO,OAGlC,CACEjB,KAAM,QACNY,SAAU,CACR,CAAEc,KAAM,uBAAwBT,OAAQ,KACxC,CAAES,KAAM,qBAAsBT,OAAQ,OAG1C,CACEjB,KAAM,gBACNY,SAAU,CAAC,CAAEc,KAAM,gBAAiBT,MAAO,KAE7C,CACEjB,KAAM,aACNY,SAAU,CAAC,CAAEc,KAAM,iBCnBRxC,MAAOI,IAAtB,sGCwGemF,EA1FH,WACV,IAAMC,EAAcC,EAAOC,UAC3B,EAA4BC,mBAAS,UAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,SAAnC,mBAAOvE,EAAP,KAAc0E,EAAd,KACA,EAAwBH,mBAASH,GAAjC,mBAAOnE,EAAP,KAAa0E,EAAb,KACA,EAA0BJ,mBAASK,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAoCP,mBAClCQ,KAAKC,UAAUZ,EAAa,KAAM,IADpC,mBAAOa,EAAP,KAAmBC,EAAnB,KAGA,EAAsCX,mBACpCQ,KAAKC,UAAUJ,EAAS,KAAM,IADhC,mBAAOO,EAAP,KAAoBC,EAApB,KAIAxC,QAAQC,IAAIuB,GAuDZ,OACE,cAACiB,EAAD,CAAepG,KAAMe,EAArB,SACE,eAACsF,EAAD,WACE,cAACC,EAAD,CACExG,QAAoB,WAAXyF,EACT7E,QAAS,kBAAM8E,EAAU,WAF3B,qBAMA,cAACc,EAAD,CACExG,QAAoB,WAAXyF,EACT7E,QAAS,kBAAM8E,EAAU,WAF3B,qBAMA,cAAC,EAAD,CAAcjF,YAzBA,WACJ,UAAVQ,GACFwF,SAASC,KAAKxC,MAAMyC,gBAAkB,UACtChB,EAAS,UAETc,SAASC,KAAKxC,MAAMyC,gBAAkB,QACtChB,EAAS,aAxCI,WAAXF,EAEA,eAACmB,EAAD,WACE,cAAC,EAAD,CAAQ3F,MAAOA,EAAOC,KAAM4E,IAC5B,cAACe,EAAD,CACEjF,MAAOwE,EACPU,SAAU,SAACjG,GAAD,OAAOwF,EAAexF,EAAEkG,OAAOnF,QACzCoF,WAAW,UAEb,cAACR,EAAD,CAAQxG,SAAO,EAACY,QAAS,WAb/BmF,EAASC,KAAKiB,MAAMb,KAad,qBAOF,eAACQ,EAAD,WACE,eAACM,EAAD,WACE,cAAC,EAAD,CAAKjG,MAAOA,EAAOC,KAAMA,IACzB,cAACiG,EAAD,CAAuBlG,MAAOA,EAAOC,KAAMA,OAE7C,cAAC2F,EAAD,CACEjF,MAAOsE,EACPY,SAAU,SAACjG,GAAD,OAAOsF,EAActF,EAAEkG,OAAOnF,QACxCoF,WAAW,UAEb,cAACR,EAAD,CAAQxG,SAAO,EAACY,QAAS,WAlC/BgF,EAAQI,KAAKiB,MAAMf,KAkCb,2BC9DVkB,IAASC,OAAO,cAAC,EAAD,IAASZ,SAASa,eAAe,W","file":"static/js/main.b395c31a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background-color: ${(props) => (props.primary ? \"#275efe\" : \"#bebebe\")};\r\n  border: none;\r\n  color: white;\r\n  margin: 5px 10px;\r\n  padding: 15px 32px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin-top: 4em;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  max-width: 80vw;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n  min-height: 80vh;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  min-height: 160vh;\r\n  width: 100%;\r\n  background-color: ${(props) => (props.dark === \"dark\" ? \"#100c2a\" : \"white\")};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ToggleButton = ({ changeTheme }) => {\r\n  return (\r\n    <div>\r\n      <CheckBoxWrapper>\r\n        <CheckBox\r\n          id=\"checkbox\"\r\n          type=\"checkbox\"\r\n          onClick={(e) => changeTheme()}\r\n        />\r\n        <CheckBoxLabel htmlFor=\"checkbox\" />\r\n      </CheckBoxWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckBoxWrapper = styled.div`\r\n  margin-top: 2em;\r\n  position: relative;\r\n`;\r\nconst CheckBoxLabel = styled.label`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 10px;\r\n  width: 42px;\r\n  height: 26px;\r\n  border-radius: 15px;\r\n  background: #bebebe;\r\n  cursor: pointer;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    border-radius: 50%;\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 3px;\r\n    background: #ffffff;\r\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\nconst CheckBox = styled.input`\r\n  opacity: 0;\r\n  z-index: 1;\r\n  border-radius: 15px;\r\n  width: 42px;\r\n  height: 26px;\r\n  &:checked + ${CheckBoxLabel} {\r\n    background: #03dac5;\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      border-radius: 50%;\r\n      width: 18px;\r\n      height: 18px;\r\n      margin-left: 21px;\r\n      transition: 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ToggleButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.textarea`\r\n  width: 100%;\r\n  overflow: scroll;\r\n  border-radius: 5px;\r\n  overflow: visible;\r\n  height: 500px;\r\n  margin-top: 4em;\r\n`;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Chart2 = ({ theme, data }) => {\r\n  const computeType = (type) => {\r\n    let arr = [];\r\n    data.forEach((element) => {\r\n      element.metadata.forEach((node) => {\r\n        if (element.type === type) {\r\n          arr.push(Math.abs(node.value));\r\n        } else {\r\n          arr.push(\"-\");\r\n        }\r\n      });\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  const computeXAxis = (type) => {\r\n    let arr = [];\r\n    data.forEach((element) => {\r\n      element.metadata.forEach((node) => {\r\n        arr.push(node.name);\r\n      });\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  const computeNetChange = (type) => {\r\n    let arr = [];\r\n    let sum = 0;\r\n    data.forEach((element) => {\r\n      element.metadata.forEach((node) => {\r\n        if (element.type === \"Net Change\") {\r\n          arr.push(sum);\r\n        } else {\r\n          arr.push(\"-\");\r\n          sum += node.value;\r\n        }\r\n      });\r\n    });\r\n    return arr;\r\n  };\r\n\r\n  const computeLegend = () => {\r\n    let legend = [];\r\n    data.forEach((element) => {\r\n      legend.push(element.type);\r\n    });\r\n    return legend;\r\n  };\r\n\r\n  const computeEmpty = () => {\r\n    let arr = [];\r\n    let sum = 0;\r\n    let flag = 1;\r\n    data.forEach((element, i) => {\r\n      element.metadata.forEach((node) => {\r\n        if (flag === 1) {\r\n          arr.push(0);\r\n          sum += node.value;\r\n        } else if (\r\n          element.type === \"Starts\" ||\r\n          element.type === \"Discrepencies\"\r\n        ) {\r\n          arr.push(sum);\r\n          sum += node.value;\r\n        } else if (element.type === \"Exits\") {\r\n          arr.push(sum - Math.abs(node.value));\r\n          sum -= Math.abs(node.value);\r\n        } else {\r\n          arr.push(\"-\");\r\n        }\r\n        flag = 0;\r\n      });\r\n    });\r\n    console.log(arr);\r\n    return arr;\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n          formatter: function (params) {\r\n            var tar;\r\n            for (let i = 1; i <= 4; i++) {\r\n              if (params[i].value !== \"-\") {\r\n                tar = params[i];\r\n              }\r\n            }\r\n            return tar.name + \"<br/>\" + tar.seriesName + \" : \" + tar.value;\r\n          },\r\n        },\r\n        legend: {\r\n          data: computeLegend(),\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          splitLine: { show: false },\r\n          data: computeXAxis(),\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Empty\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              barBorderColor: \"rgba(0,0,0,0)\",\r\n              color: \"rgba(0,0,0,0)\",\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                borderColor: \"rgba(0,0,0,0)\",\r\n                color: \"rgba(0,0,0,0)\",\r\n              },\r\n            },\r\n            barWidth: \"95%\",\r\n            data: computeEmpty(),\r\n            // [0, 394, 604, 372, 372, \"-\"]\r\n          },\r\n          {\r\n            name: \"Starts\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(190,241,198)\",\r\n              color: \"rgb(190,241,198)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n            data: computeType(\"Starts\"),\r\n          },\r\n          {\r\n            name: \"Exits\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(249,178,194)\",\r\n              color: \"rgb(249,178,194)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"bottom\",\r\n            },\r\n            data: computeType(\"Exits\"),\r\n          },\r\n          {\r\n            name: \"Discrepencies\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(233,233,235)\",\r\n              color: \"rgb(233,233,235)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"bottom\",\r\n            },\r\n            data: computeType(\"Discrepencies\"),\r\n          },\r\n          {\r\n            name: \"Net Change\",\r\n            type: \"bar\",\r\n            stack: \"empty\",\r\n            itemStyle: {\r\n              borderColor: \"rgb(200,231,249)\",\r\n              color: \"rgb(200,231,249)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n            data: computeNetChange(),\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Chart2;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Bar = ({ theme, data }) => {\r\n  const getYAxis = () => {\r\n    let yAxisData = [];\r\n    data.forEach((element) => {\r\n      yAxisData.push(element.name);\r\n    });\r\n    return yAxisData;\r\n  };\r\n\r\n  const getSeries1 = () => {\r\n    let series1 = [];\r\n    data.forEach((element) => {\r\n      series1.push(element.caseDaysToClose);\r\n    });\r\n    return series1;\r\n  };\r\n\r\n  const getSeries2 = () => {\r\n    let series2 = [];\r\n    data.forEach((element) => {\r\n      series2.push(element.openCasesAge);\r\n    });\r\n    return series2;\r\n  };\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"Case Days to Close\", \"Open Cases Age\"],\r\n        },\r\n        grid: {\r\n          left: \"1%\",\r\n          right: \"1%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.01],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: getYAxis(),\r\n        },\r\n        series: [\r\n          {\r\n            name: \"Case Days to Close\",\r\n            type: \"bar\",\r\n            barGap: \"0%\",\r\n            barCategoryGap: \"25%\",\r\n            barWidth: \"30%\",\r\n            data: getSeries1(),\r\n            itemStyle: {\r\n              borderColor: \"rgb(97,180,230)\",\r\n              color: \"rgb(97,180,230)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"right\",\r\n              color: \"rgb(97,180,230)\",\r\n            },\r\n          },\r\n          {\r\n            name: \"Open Cases Age\",\r\n            type: \"bar\",\r\n            barGap: \"0%\",\r\n            barCategoryGap: \"25%\",\r\n            barWidth: \"30%\",\r\n            data: getSeries2(),\r\n            itemStyle: {\r\n              borderColor: \"rgb(253,143,126)\",\r\n              color: \"rgb(253,143,126)\",\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: \"right\",\r\n              color: \"rgb(253,143,126)\",\r\n            },\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Bar;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst Bar = ({ theme, data }) => {\r\n  const getYAxis = () => {\r\n    let yAxisData = [];\r\n    data.forEach((element) => {\r\n      yAxisData.push(element.name);\r\n    });\r\n    return yAxisData;\r\n  };\r\n\r\n  const getSeries = () => {\r\n    let series = [];\r\n    data.forEach((element) => {\r\n      let value = element.caseDaysToClose - element.openCasesAge;\r\n      let obj = {\r\n        value: value.toFixed(2),\r\n        label: {\r\n          show: true,\r\n          position: value > 1 ? \"right\" : \"left\",\r\n          color: \"rgb(91,207,198)\",\r\n        },\r\n      };\r\n      series.push(obj);\r\n    });\r\n    return series;\r\n  };\r\n  return (\r\n    <ReactEcharts\r\n      option={{\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          position: \"top\",\r\n          boundaryGap: [0.1, 0.05],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: getYAxis(),\r\n        },\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            label: {\r\n              show: true,\r\n              position: \"left\",\r\n            },\r\n            itemStyle: {\r\n              borderColor: \"rgb(91,207,198)\",\r\n              color: \"rgb(91,207,198)\",\r\n            },\r\n            data: getSeries(),\r\n          },\r\n        ],\r\n      }}\r\n      theme={theme}\r\n      style={{ height: \"80vh\", width: \"80vw\" }}\r\n    />\r\n  );\r\n};\r\nexport default Bar;\r\n","export default [\r\n  {\r\n    name: \"Employee Grievance\",\r\n    caseDaysToClose: 83.9,\r\n    openCasesAge: 69,\r\n  },\r\n  {\r\n    name: \"Compensation\",\r\n    caseDaysToClose: 60.6,\r\n    openCasesAge: 68.3,\r\n  },\r\n  {\r\n    name: \"Benefits\",\r\n    caseDaysToClose: 48.7,\r\n    openCasesAge: 53.6,\r\n  },\r\n  {\r\n    name: \"Data Change\",\r\n    caseDaysToClose: 41.7,\r\n    openCasesAge: 54.5,\r\n  },\r\n  {\r\n    name: \"Employee Relations\",\r\n    caseDaysToClose: 38.6,\r\n    openCasesAge: 28.7,\r\n  },\r\n  {\r\n    name: \"HR Policies Inquiry\",\r\n    caseDaysToClose: 23.9,\r\n    openCasesAge: 15.5,\r\n  },\r\n  {\r\n    name: \"Level of Absence\",\r\n    caseDaysToClose: 23.2,\r\n    openCasesAge: 15.9,\r\n  },\r\n];\r\n","export default [\r\n  {\r\n    type: \"Starts\",\r\n    metadata: [\r\n      { name: \"Expansion\", value: 394 },\r\n      { name: \"Replacement\", value: 326 },\r\n    ],\r\n  },\r\n  {\r\n    type: \"Exits\",\r\n    metadata: [\r\n      { name: \"Involuntary Turnover\", value: -116 },\r\n      { name: \"Voluntary Turnover\", value: -232 },\r\n    ],\r\n  },\r\n  {\r\n    type: \"Discrepencies\",\r\n    metadata: [{ name: \"Discrepencies\", value: 7 }],\r\n  },\r\n  {\r\n    type: \"Net Change\",\r\n    metadata: [{ name: \"Net Change\" }],\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./components/Button\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport BodyContainer from \"./components/BodyContainer\";\r\nimport ToggleButton from \"./components/ToggleButton\";\r\nimport ChartContainer from \"./components/ChartContainer\";\r\nimport ConfigInput from \"./components/ConfigInput\";\r\n\r\nimport Chart2 from \"./components/Chart2\";\r\nimport Bar from \"./components/Bar\";\r\nimport BarWithNegativeValues from \"./components/BarWithNegativeValues\";\r\n\r\nimport config from \"./data/config\";\r\nimport config2 from \"./data/config2\";\r\nimport Container from \"./components/Container\";\r\n\r\nconst App = () => {\r\n  const initialData = config.reverse();\r\n  const [active, setActive] = useState(\"chart1\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [data, setData] = useState(initialData);\r\n  const [data2, setData2] = useState(config2);\r\n\r\n  const [inputValue, setInputValue] = useState(\r\n    JSON.stringify(initialData, null, 4)\r\n  );\r\n  const [inputValue2, setInputValue2] = useState(\r\n    JSON.stringify(config2, null, 4)\r\n  );\r\n\r\n  console.log(initialData);\r\n\r\n  const saveData = () => {\r\n    setData(JSON.parse(inputValue));\r\n  };\r\n\r\n  const saveData2 = () => {\r\n    setData2(JSON.parse(inputValue2));\r\n  };\r\n\r\n  const renderChart = () => {\r\n    if (active === \"chart2\") {\r\n      return (\r\n        <Container>\r\n          <Chart2 theme={theme} data={data2} />\r\n          <ConfigInput\r\n            value={inputValue2}\r\n            onChange={(e) => setInputValue2(e.target.value)}\r\n            spellCheck=\"false\"\r\n          />\r\n          <Button primary onClick={() => saveData2()}>\r\n            Save\r\n          </Button>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container>\r\n          <ChartContainer>\r\n            <Bar theme={theme} data={data} />\r\n            <BarWithNegativeValues theme={theme} data={data} />\r\n          </ChartContainer>\r\n          <ConfigInput\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            spellCheck=\"false\"\r\n          />\r\n          <Button primary onClick={() => saveData()}>\r\n            Save\r\n          </Button>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  const changeTheme = () => {\r\n    if (theme === \"light\") {\r\n      document.body.style.backgroundColor = \"#100c2a\";\r\n      setTheme(\"dark\");\r\n    } else {\r\n      document.body.style.backgroundColor = \"white\";\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BodyContainer dark={theme}>\r\n      <Wrapper>\r\n        <Button\r\n          primary={active === \"chart1\"}\r\n          onClick={() => setActive(\"chart1\")}\r\n        >\r\n          Chart 1\r\n        </Button>\r\n        <Button\r\n          primary={active === \"chart2\"}\r\n          onClick={() => setActive(\"chart2\")}\r\n        >\r\n          Chart 2\r\n        </Button>\r\n        <ToggleButton changeTheme={changeTheme} />\r\n        {renderChart()}\r\n      </Wrapper>\r\n    </BodyContainer>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"main\"));\r\n"],"sourceRoot":""}